{"posts":[{"title":"Hello","text":"Welcome To My Blog! Remain to do: Cmake+Vscode Clion+Qt Clion+Vs-x86 Cmake常用指令介绍 Hexo 博客 建议搭建教程","link":"/Web/2022/09/15/Hello/"},{"title":"关于环境变量的笔记","text":"前言在开启编程之前，第一步就是编程环境的配置 笔者从自带环境的 Dev C++到目前使用的可以自定义环境的Clion,以及辅助使用的轻量级编辑器Vs code的转换过程中,对环境变量这一概念有了更深一步的了解,特此记录. 网上的教程参差不齐,不同教程面对的对象也不太相同. 就拿目前比较热门的编程语言Python为例,大部分教程都是引导下载安装包,到在cmd窗口中输入”python –Version”,显示Python版本就代表环境变量的安装成功. 但在逐渐深入python的学习中,会发现有时候并不需要很臃肿的基础解释器以及附带的模块包,这个时候就需要了解一个新名词:虚拟环境.但虚拟环境还可以像上面的流程一样搭建吗?很明显是不行的.上网搜教程依然可以解决这个问题.但在日后逐渐深入了解中,会发现一时的求方便,终究会影响后面的学习. 正文什么是环境变量笔者认为,环境变量是在运行某一特定程序所需要的依赖项. 一个简单的例子,在最早期进行文件读取的学习中,需要考虑文件不存在的情形下,程序是否需要设置一个不同的特判. 此处,我们将要读写的文件就是一个依赖项,假设文件不存在,那么这个程序就是无法运行的或者运行结果不是我们所需要的. 又或者,我们将哔哩哔哩作为例子,我们需要这个程序才能进行一些追番等操作,那么哔哩哔哩这个程序就是我们进行追番这一动作的依赖项. 那么,我们就可以将环境变量理解为一个工具或者一个必须的文件. 环境变量的用途上文中提到使用cmd指令来验证python的环境变量是否已经正确设置. 这个过程先是计算机在设置的PATH中搜索到python这一程序,再执行这个程序,并传入”–version”这一参数,最后程序输出python的版本号. 看到这里,你是否想起配置环境的过程中即使是对着抄路径,还是失败的经历.大概就是你安装的路径和你告诉计算机的路径不一致的原因. 你C盘爆满的原因之一,或许就是你安装了很多你没有使用到的工具. 关于环境搭建的一些小建议 将工具安装在非系统盘区域,最好能设置一个专属的目录作为常用工具的存储目录,方便工具引用环境变量 花费一定时间对环境变量目录Path进行整理,删除一些移动过的或者已经卸载的工具的无效变量 对一些工具目录变更时,及时检查环境变量是否有效,最简单有效的办法就是查看版本号 在接下来的博客中也会有对部分工具配置的教程实践","link":"/Web/2022/09/18/environment/"}],"tags":[{"name":"Env","slug":"Env","link":"/Web/tags/Env/"},{"name":"Init","slug":"Init","link":"/Web/tags/Init/"}],"categories":[{"name":"Environment","slug":"Environment","link":"/Web/categories/Environment/"},{"name":"New","slug":"New","link":"/Web/categories/New/"}],"pages":[{"title":"About me","text":"A Student in HUST!","link":"/Web/about/index.html"},{"title":"","text":"$(function () { //获取处理友链数据 $.getJSON(\"../json_data/friend.json\", function (data) { // var data0 = data[0]; $('.links-content').html(\"\"); // 随机排序过滤失效的 let notValid = data.filter((item, a, b) => item.valid == 0); data = data.filter((item, a, b) => item.valid != 0).sort(function (a, b) { return Math.random() > .5 ? -1 : 1; }); $('.links-content').append(\"大佬们\"); $.each(data, function (i, e) { var html = \"\"; if (e.src == undefined) { html += \" \"; } else { html += \" \"; } html += \" 网址：\" + e.name + \"\" + \" 时间：\" + e.date + \"简介：\" + e.desc + \"\" + \" \"; $('.links-content').append(html); }); // 过期的 if (notValid.length > 0) { $('.links-content').append(\"异常的大佬们\"); $.each(notValid, function (i, e) { var html = \"\"; html += \" \"; html += \" 网址：\" + e.name + \"\" + \" 访问时间：\" + e.stopTime + \"简介：\" + e.desc + \"\" + \" \"; $('.links-content').append(html); }) } $('.links-content').append(\"\"); }) });","link":"/Web/js/friend.js"},{"title":"Friends","text":".friend-title-item { font-weight: bold; text-align: center; } .friend-card-item { width: 40%; border-radius: 2px; color: #4a4a4a; padding: 0.5rem; display: inline-block; margin: 25px; margin-top: 15px; } .friend-card-item .text-desc { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; box-sizing: content-box; } .friend-card-item .ava { width: 5rem !important; height: 5rem !important; margin: 0 !important; margin-right: 0.2em !important; border-radius: 40px; } .friend-card-item img { float: left; transition: all 0.5s ease-in; -webkit-transition: all 0.5s ease-in; -moz-transition: all 0.5s ease-in; -o-transition: all 0.5s ease-in; } .friend-card-item img:hover { transform: rotate(360deg); -webkit-transform: rotate(360deg); -moz-transform: rotate(360deg); -o-transform: rotate(360deg); -ms-transform: rotate(360deg); } .friend-card-item:hover { transform: scale(0.995); box-shadow: 0 2px 6px 0 rgba(0,0,0,0.12), 0 0 6px 0 rgba(0,0,0,0.04); } 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名根据博客质量以及个人喜好加权排序，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 申请友链前请先添加本站信息。 友链会隔一段时间统一清理，添加，申请的朋友请耐心等等 本站友链信息如下： 网站图标：https://zxc02110.gitee.io/web/img/avatar.png 网站名称：Potato's Blog 网站地址：https://zxc02110.gitee.io/web/ 网站简介：欢迎交流学习心得 Github地址：欢迎互相follow 加载中，稍等几秒...","link":"/Web/friends/index.html"},{"title":"","text":"[{\"date\":\"2019.09.10\",\"src\":\"/Web/images/avatar.svg\",\"name\":\"Init\",\"desc\":\"Test\",\"url\":\"https://www.4399.com/\"},{\"date\":\"2019.09.09\",\"src\":\"/Web/images/avatar.svg\",\"name\":\"Init\",\"desc\":\"Test\",\"url\":\"https://www.4399.com/\",\"valid\":0}]","link":"/Web/json_data/friend.json"},{"title":"","text":"// author by removef // https://removeif.github.io/ Storage.prototype.setExpire = (key, value, expire) => { const obj = { data: value, time: Date.now(), expire: expire }; localStorage.setItem(key, JSON.stringify(obj)); }; Storage.prototype.getExpire = key => { let val = localStorage.getItem(key); if (!val) { return val; } val = JSON.parse(val); if (Date.now() - val.time > val.expire) { localStorage.removeItem(key); return null; } return val.data; }; Date.prototype.Format = function(fmt) { // author: meizz const o = { 'M+': this.getMonth() + 1, // 月份 'd+': this.getDate(), // 日 'h+': this.getHours(), // 小时 'm+': this.getMinutes(), // 分 's+': this.getSeconds(), // 秒 'q+': Math.floor((this.getMonth() + 3) / 3), // 季度 'S': this.getMilliseconds() // 毫秒 }; if (/(y+)/.test(fmt)) { fmt = fmt.replace(RegExp.$1, (this.getFullYear() + '').substr(4 - RegExp.$1.length)); } for (const k in o) { if (new RegExp('(' + k + ')').test(fmt)) { fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length)); } } return fmt; }; function getDateDiff(dateTimeStamp) { const minute = 1000 * 60; const hour = minute * 60; const day = hour * 24; const halfamonth = day * 15; const month = day * 30; const now = new Date().getTime(); const diffValue = now - dateTimeStamp; if (diffValue < 0) { return; } const monthC = diffValue / month; const weekC = diffValue / (7 * day); const dayC = diffValue / day; const hourC = diffValue / hour; const minC = diffValue / minute; if (monthC >= 1) { result = ' ' + parseInt(monthC) + '月前'; } else if (weekC >= 1) { result = ' ' + parseInt(weekC) + '周前'; } else if (dayC >= 1) { result = ' ' + parseInt(dayC) + '天前'; } else if (hourC >= 1) { result = ' ' + parseInt(hourC) + '小时前'; } else if (minC >= 1) { result = ' ' + parseInt(minC) + '分钟前'; } else { result = ' 刚刚'; } return result; } const expireTime1H = 1000 * 60 * 60; // 1小时过期 function isNightRange(beginTime, endTime) { const nowDate = new Date(); const nowTime = nowDate.getHours() + ':' + nowDate.getMinutes(); const strb = beginTime.split(':'); if (strb.length != 2) { return false; } const stre = endTime.split(':'); if (stre.length != 2) { return false; } const strn = nowTime.split(':'); if (stre.length != 2) { return false; } const b = new Date(); const e = new Date(); const n = new Date(); b.setHours(strb[0]); b.setMinutes(strb[1]); e.setHours(stre[0]); e.setMinutes(stre[1]); n.setHours(strn[0]); n.setMinutes(strn[1]); console.log(n.getTime()); if (n.getTime() - b.getTime() > 0 && n.getTime() - e.getTime() < 0) { return true; } console.log('now Date is：' + n.getHours() + ':' + n.getMinutes() + '，is not Night！'); return false; } const btoa = typeof window !== 'undefined' && window.btoa && window.btoa.bind(window); function isNightFun() { var isNightTemp = localStorage.getExpire('night'); // 第一次进来判断是白天还是晚上 if (isNightTemp == null || isNightTemp == undefined) { if (isNightRange('19:00', '23:59') || isNightRange('00:00', '07:00')) { isNightTemp = 'true'; } else { isNightTemp = 'false'; } localStorage.setExpire('night', isNightTemp, expireTime1H); } return isNightTemp; } var isNight = isNightFun(); // 参考自 https://www.imaegoo.com/ var nightNav; var nightIcon; function applyNight(value) { if (value == 'true') { document.body.className += ' night'; if (nightIcon) { nightIcon.className = nightIcon.className.replace(/ fa-moon/g, '') + ' fa-lightbulb'; } } else { document.body.className = document.body.className.replace(/ night/g, ''); if (nightIcon) { nightIcon.className = nightIcon.className.replace(/ fa-lightbulb/g, '') + ' fa-moon'; } } } function findNightIcon() { nightNav = document.getElementById('night-nav'); nightIcon = document.getElementById('night-icon'); if (!nightNav || !nightIcon) { setTimeout(findNightIcon, 100); } else { nightNav.addEventListener('click', switchNight); if (isNight) { nightIcon.className = nightIcon.className.replace(/ fa-moon/g, '') + ' fa-lightbulb'; } else { nightIcon.className = nightIcon.className.replace(/ fa-lightbulb/g, '') + ' fa-moon'; } } } function switchNight() { if (isNight == 'false') { isNight = 'true'; } else { isNight = 'false'; } applyNight(isNight); localStorage.setExpire('night', isNight, expireTime1H); if (typeof loadUtterances == 'function') { loadUtterances(); } } findNightIcon(); applyNight(isNight);","link":"/Web/js/theme-setting.js"}]}