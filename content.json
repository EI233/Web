{"posts":[{"title":"Hello","text":"Welcome To My Blog!","link":"/web/2022/09/15/Hello/"},{"title":"关于环境变量的笔记","text":"前言在开启编程之前，第一步就是编程环境的配置 笔者从自带环境的 Dev C++到目前使用的可以自定义环境的Clion,以及辅助使用的轻量级编辑器Vs code的转换过程中,对环境变量这一概念有了更深一步的了解,特此记录. 网上的教程参差不齐,不同教程面对的对象也不太相同. 就拿目前比较热门的编程语言Python为例,大部分教程都是引导下载安装包,到在cmd窗口中输入”python –Version”,显示Python版本就代表环境变量的安装成功. 但在逐渐深入python的学习中,会发现有时候并不需要很臃肿的基础解释器以及附带的模块包,这个时候就需要了解一个新名词:虚拟环境.但虚拟环境还可以像上面的流程一样搭建吗?很明显是不行的.上网搜教程依然可以解决这个问题.但在日后逐渐深入了解中,会发现一时的求方便,终究会影响后面的学习. 正文什么是环境变量笔者认为,环境变量是在运行某一特定程序所需要的依赖项. 一个简单的例子,在最早期进行文件读取的学习中,需要考虑文件不存在的情形下,程序是否需要设置一个不同的特判. 此处,我们将要读写的文件就是一个依赖项,假设文件不存在,那么这个程序就是无法运行的或者运行结果不是我们所需要的. 又或者,我们将哔哩哔哩作为例子,我们需要这个程序才能进行一些追番等操作,那么哔哩哔哩这个程序就是我们进行追番这一动作的依赖项. 那么,我们就可以将环境变量理解为一个工具或者一个必须的文件. 环境变量的用途上文中提到使用cmd指令来验证python的环境变量是否已经正确设置. 这个过程先是计算机在设置的PATH中搜索到python这一程序,再执行这个程序,并传入”–version”这一参数,最后程序输出python的版本号. 看到这里,你是否想起配置环境的过程中即使是对着抄路径,还是失败的经历.大概就是你安装的路径和你告诉计算机的路径不一致的原因. 你C盘爆满的原因之一,或许就是你安装了很多你没有使用到的工具. 如何成为一个合格的环境变量管理者首先,无论是编译工具,依赖项,或者是常用软件,都不建议安装在系统盘 Remain to do","link":"/web/2022/09/18/environment/"}],"tags":[{"name":"Init","slug":"Init","link":"/web/tags/Init/"},{"name":"Env","slug":"Env","link":"/web/tags/Env/"}],"categories":[{"name":"New","slug":"New","link":"/web/categories/New/"},{"name":"Environment","slug":"Environment","link":"/web/categories/Environment/"}],"pages":[{"title":"About me","text":"A Student in HUST!","link":"/web/about/index.html"}]}